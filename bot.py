from telegram.ext import Application, CommandHandler
from apscheduler.schedulers.asyncio import AsyncIOScheduler
from dotenv import load_dotenv
import os
import logging

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TOKEN = os.getenv("TOKEN")
CHAT_ID = int(os.getenv("CHAT_ID"))

# –î–∞–Ω–Ω—ã–µ
users = ["–ê–ª–∞–Ω", "–ì–µ–Ω–∞", "–†–æ–º–∞"]
zones = ["–í–∞–Ω–Ω–∞/–¢—É–∞–ª–µ—Ç", "–ö—É—Ö–Ω—è", "–ö–æ—Ä–∏–¥–æ—Ä"]
current_week = 0

# –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
scheduler = AsyncIOScheduler()

# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
async def send_schedule():
    global current_week
    rotation = users[current_week % len(users):] + users[:current_week % len(users)]
    assignments = list(zip(zones, rotation))
    message = "üßπ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É–±–æ—Ä–∫–∏ –Ω–∞ –Ω–µ–¥–µ–ª—é:\n\n"
    for zone, person in assignments:
        message += f"{zone}: {person}\n"
    await application.bot.send_message(chat_id=CHAT_ID, text=message)
    current_week += 1

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update, context):
    await update.message.reply_text("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π /schedule —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Ç–µ–∫—É—â–µ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ.")

# –ö–æ–º–∞–Ω–¥–∞ /schedule
async def schedule_command(update, context):
    rotation = users[current_week % len(users):] + users[:current_week % len(users)]
    assignments = list(zip(zones, rotation))
    message = "üßπ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É–±–æ—Ä–∫–∏ –Ω–∞ –Ω–µ–¥–µ–ª—é:\n\n"
    for zone, person in assignments:
        message += f"{zone}: {person}\n"
    await update.message.reply_text(message)

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
application = Application.builder().token(TOKEN).build()
application.add_handler(CommandHandler("start", start))
application.add_handler(CommandHandler("schedule", schedule_command))

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
async def main():
    scheduler.add_job(send_schedule, "interval", weeks=1)
    scheduler.start()
    await application.run_polling()

# –ó–∞–ø—É—Å–∫
if __name__ == "__main__":
    import asyncio
    print("–ë–æ—Ç –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...")
    asyncio.run(main())
