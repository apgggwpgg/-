import os
import datetime
import logging

from telegram import Update
from telegram.ext import ApplicationBuilder, CommandHandler, ContextTypes
from apscheduler.schedulers.asyncio import AsyncIOScheduler

# ‚Äî –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# ‚Äî –ß—Ç–µ–Ω–∏–µ –∏–∑ –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN   = os.environ["BOT_TOKEN"]
CHAT_ID = int(os.environ["CHAT_ID"])

# ‚Äî –£—á–∞—Å—Ç–Ω–∏–∫–∏ –∏ –∑–æ–Ω—ã
people = ["–ì–µ–Ω–∞", "–†–æ–º–∞", "–ê–ª–∞–Ω"]
zones  = ["–í–∞–Ω–Ω–∞ –∏ —Ç—É–∞–ª–µ—Ç", "–ö—É—Ö–Ω—è", "–ö–æ—Ä–∏–¥–æ—Ä"]
BASE_DATE = datetime.date(2025, 1, 1)

# ‚Äî –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
def render_schedule_text():
    today = datetime.date.today()
    weeks_passed = (today - BASE_DATE).days // 7
    offset = weeks_passed % len(people)
    lines = ["üßπ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É–±–æ—Ä–∫–∏ –Ω–∞ –Ω–µ–¥–µ–ª—é:\n"]
    for i, zone in enumerate(zones):
        person = people[(i + offset) % len(people)]
        lines.append(f"‚ñ™ {zone}: {person}")
    return "\n".join(lines)

# ‚Äî –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /schedule
async def schedule_command(update: Update, ctx: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(render_schedule_text())

# ‚Äî –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
async def send_weekly_schedule():
    await application.bot.send_message(chat_id=CHAT_ID, text=render_schedule_text())

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–æ—Ç–∞ –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ ===

# –°–æ–∑–¥–∞—ë–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
application = ApplicationBuilder().token(TOKEN).build()
application.add_handler(CommandHandler("schedule", schedule_command))

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º APScheduler
scheduler = AsyncIOScheduler()
scheduler.add_job(
    send_weekly_schedule,
    trigger="cron",
    day_of_week="mon",
    hour=9,
    minute=0
)
scheduler.start()

# === –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ===
if __name__ == "__main__":
    logging.info("–°—Ç–∞—Ä—Ç—É–µ–º –±–æ—Ç –∏ –∑–∞–ø—É—Å–∫–∞–µ–º polling...")
    # .run_polling() —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ –∑–∞–ø—É—Å–∫–∞–µ—Ç asyncio loop –∏ –Ω–µ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –µ–≥–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
    application.run_polling()

